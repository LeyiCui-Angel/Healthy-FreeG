Last login: Sun Feb 27 13:08:29 on ttys000
~ ❯ utop                                                            01:12:35 PM
zsh: command not found: utop

~ ❯ opam install utop                                               01:12:38 PM
[NOTE] Package utop is already installed (current version is 2.9.0).

~ ❯ utop                                                            01:12:56 PM
zsh: command not found: utop

~ ❯ eval `opam config env`                                          01:13:05 PM

~ ❯ utop                                                            01:13:21 PM
────────┬─────────────────────────────────────────────────────────────┬─────────
        │ Welcome to utop version 2.9.0 (using OCaml version 4.12.0)! │
        └─────────────────────────────────────────────────────────────┘

Type #utop_help for help about using utop.

─( 13:13:25 )─< command 0 >──────────────────────────────────────{ counter: 0 }─
utop # ();;
- : unit = ()
─( 13:13:33 )─< command 1 >──────────────────────────────────────────────────────────────{ counter: 0 }─
utop # String.contains "Hello" 'o';;
- : bool = true
─( 13:13:33 )─< command 2 >──────────────────────────────────────────────────────────────{ counter: 0 }─
utop # 'o';;
- : char = 'o'
─( 13:14:09 )─< command 3 >──────────────────────────────────────────────────────────────{ counter: 0 }─
utop # ();;
- : unit = ()
─( 13:14:25 )─< command 4 >──────────────────────────────────────────────────────────────{ counter: 0 }─
utop # clear

Interrupted.
─( 13:14:25 )─< command 4 >──────────────────────────────────────────────────────────────{ counter: 0 }─
utop # print_int 3;;
3- : unit = ()
─( 13:14:30 )─< command 5 >──────────────────────────────────────────────────────────────{ counter: 0 }─
utop # print_endline "hello";;
hello
- : unit = ()
─( 13:14:59 )─< command 6 >──────────────────────────────────────────────────────────────{ counter: 0 }─
utop # print_endline "hello";;
hello
- : unit = ()
─( 13:15:32 )─< command 7 >──────────────────────────────────────────────────────────────{ counter: 0 }─
utop # 1 == 4;;
- : bool = false
─( 13:15:47 )─< command 8 >──────────────────────────────────────────────────────────────{ counter: 0 }─
utop # 4 == 4;
;
;;
Error: Syntax error
─( 13:16:38 )─< command 9 >──────────────────────────────────────────────────────────────{ counter: 0 }─
utop # 4 == 4;;
- : bool = true
─( 13:16:45 )─< command 10 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # 1 == 1;;
- : bool = true
─( 13:16:48 )─< command 11 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # 1.0 == 1;;
Error: This expression has type int but an expression was expected of type
         float
  Hint: Did you mean `1.'?
─( 13:17:00 )─< command 12 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # 1.0 == 1.0;;
- : bool = false
─( 13:18:40 )─< command 13 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # "a" == "a";;
- : bool = false
─( 13:18:47 )─< command 14 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # 'a' == 'a';;
- : bool = true
─( 13:19:20 )─< command 15 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # 1 = 1;;
- : bool = true
─( 13:19:34 )─< command 16 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # "a" = "a";;
- : bool = true
─( 13:19:50 )─< command 17 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # if 3 = 4 then 42 else 57;;
- : int = 57
─( 13:20:01 )─< command 18 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # if 2 = 2 then 42 else 57;;
- : int = 42
─( 13:21:14 )─< command 19 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let x = 42;;
val x : int = 42
─( 13:21:25 )─< command 20 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # x;;
- : int = 42
─( 13:22:10 )─< command 21 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # x + 2;;
- : int = 44
─( 13:22:27 )─< command 22 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # x + 88;;
- : int = 130
─( 13:22:32 )─< command 23 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let y = 32 in y + 54;;
- : int = 86
─( 13:22:37 )─< command 24 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # y;;
Error: Unbound value y
─( 13:22:53 )─< command 25 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # x ;;
- : int = 42
─( 13:22:57 )─< command 26 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let a = 4 in
let a = a + 2 in
let a = a * 2 in
a;;
- : int = 12
─( 13:23:24 )─< command 27 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # a;;
Error: Unbound value a
─( 13:23:58 )─< command 28 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let a = 5;


;

;;
Error: Syntax error
─( 13:24:32 )─< command 29 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let a == 5;;
Error: Syntax error
─( 13:24:53 )─< command 30 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let adda x = x + a;;
Error: Unbound value a
─( 13:24:55 )─< command 31 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let a = 5;;
val a : int = 5
─( 13:25:02 )─< command 32 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let adda x = x + a;;
val adda : int -> int = <fun>
─( 13:25:13 )─< command 33 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # a;;
- : int = 5
─( 13:25:18 )─< command 34 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # adda 10;;
- : int = 15
─( 13:25:25 )─< command 35 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let a = 1;;
val a : int = 1
─( 13:26:15 )─< command 36 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # adda 10;;
- : int = 15
─( 13:26:48 )─< command 37 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let adda x = x + a;;
val adda : int -> int = <fun>
─( 13:26:53 )─< command 38 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # adda 10;;
- : int = 11
─( 13:27:59 )─< command 39 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # fun x -> x * x;;
- : int -> int = <fun>
─( 13:28:00 )─< command 40 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # (fun x -> x * x)56;;
- : int = 3136
─( 13:28:26 )─< command 41 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # fun x -> fun y -> x * x;;
- : int -> 'a -> int = <fun>
─( 13:28:58 )─< command 42 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # fun x y -> x * x;;
- : int -> 'a -> int = <fun>
─( 13:29:27 )─< command 43 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let xs = fun x y -> x * x;;
val xs : int -> 'a -> int = <fun>
─( 13:29:33 )─< command 44 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # xs 3 4;;
- : int = 9
─( 13:30:08 )─< command 45 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # xs 6 4;;
- : int = 36
─( 13:30:26 )─< command 46 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # xs 6 "4";;
- : int = 36
─( 13:30:31 )─< command 47 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let adda = fun x -> x + a;

Interrupted.
─( 13:30:31 )─< command 47 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let adda = fun x -> x + a;;
val adda : int -> int = <fun>
─( 13:30:37 )─< command 48 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let xs x y = x * x;;
val xs : int -> 'a -> int = <fun>
─( 13:31:23 )─< command 49 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # xs 4 4 ;;
- : int = 16
─( 13:31:38 )─< command 50 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # xs 5 2;;
- : int = 25
─( 13:31:43 )─< command 51 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # (18, "adam");;
- : int * string = (18, "adam")
─( 13:31:48 )─< command 52 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let p = (18, "adam");;
val p : int * string = (18, "adam")
─( 13:32:13 )─< command 53 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # fst p

Interrupted.
─( 13:32:13 )─< command 53 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # fst p;;
- : int = 18
─( 13:32:41 )─< command 54 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # snd p;;
- : string = "adam"
─( 13:32:52 )─< command 55 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let (x, _) = p in x;;
- : int = 18
─( 13:32:57 )─< command 56 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let (_, y) = p in y;;
- : string = "adam"
─( 13:33:15 )─< command 57 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let (x, y) = p in (y, x);;
- : string * int = ("adam", 18)
─( 13:33:35 )─< command 58 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # type stu = {age: int; name: string; dept: string}
;;
type stu = { age : int; name : string; dept : string; }
─( 13:33:47 )─< command 59 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let b0 = {age=18; name="adam"; dept="CS"};;
val b0 : stu = {age = 18; name = "adam"; dept = "CS"}
─( 13:34:21 )─< command 60 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let b1 = {b0 with name ="bob"};;
val b1 : stu = {age = 18; name = "bob"; dept = "CS"}
─( 13:35:07 )─< command 61 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # b0;;
- : stu = {age = 18; name = "adam"; dept = "CS"}
─( 13:35:26 )─< command 62 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # b1;;
- : stu = {age = 18; name = "bob"; dept = "CS"}
─( 13:35:37 )─< command 63 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # [];;
- : 'a list = []
─( 13:35:43 )─< command 64 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # [1];;
- : int list = [1]
─( 13:36:01 )─< command 65 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # [1, "adam"];

Interrupted.
─( 13:36:01 )─< command 65 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # [1; 2; 3]

Interrupted.
─( 13:36:01 )─< command 65 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # [1; 2; 3];;
- : int list = [1; 2; 3]
─( 13:36:19 )─< command 66 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # [1, 2.2];;
- : (int * float) list = [(1, 2.2)]
─( 13:36:44 )─< command 67 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # [1; 2; 3.9];;
Error: This expression has type float but an expression was expected of type
         int
─( 13:36:50 )─< command 68 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # 7 :: [1;2];;
- : int list = [7; 1; 2]
─( 13:37:08 )─< command 69 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # [7; 8] :: [1; 2];;
Error: This expression has type int but an expression was expected of type
         int list
─( 13:37:33 )─< command 70 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # [7; 8] :: [[1; 2]];;
- : int list list = [[7; 8]; [1; 2]]
─( 13:38:05 )─< command 71 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # (::);;
Error: The constructor :: expects 2 argument(s),
       but is applied here to 0 argument(s)
─( 13:38:55 )─< command 72 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # [7; 8] @ [1; 2];;
- : int list = [7; 8; 1; 2]
─( 13:39:01 )─< command 73 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # List.hd [4;5];;
- : int = 4
─( 13:39:14 )─< command 74 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # List.tl [4;5];;
- : int list = [5]
─( 13:39:52 )─< command 75 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # List.hd [4;5];;
- : int = 4
─( 13:39:58 )─< command 76 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # List.tl [4;5];;
- : int list = [5]
─( 13:40:09 )─< command 77 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # List.tl [4;5;6];;
- : int list = [5; 6]
─( 13:40:10 )─< command 78 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # List.tl [4;5;6;7];;
- : int list = [5; 6; 7]
─( 13:40:15 )─< command 79 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # List.map (fun a -> a + 1) [2;3;4];;
- : int list = [3; 4; 5]
─( 13:40:34 )─< command 80 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # List.map (fun a -> a + 2) [2;3;4];;
- : int list = [4; 5; 6]
─( 13:43:56 )─< command 81 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let mymap f l =
match l with
| [] -> []
| hd :: tl -> (f hd) :: (mymap f tl);;
Error: Unbound value mymap
Hint: If this is a recursive definition,
you should add the 'rec' keyword on line 1
─( 13:44:14 )─< command 82 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let rec mymap f l =
match l with
| [] -> []
| hd :: tl -> (f hd) :: (mymap f tl);;
val mymap : ('a -> 'b) -> 'a list -> 'b list = <fun>
─( 13:46:57 )─< command 83 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # mymap (fun a -> a + 2) [2;3;4];;
- : int list = [4; 5; 6]
─( 13:47:12 )─< command 84 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # List.rev [3; 4; 5];;
- : int list = [5; 4; 3]
─( 13:48:24 )─< command 85 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # List.rev [3; [4; 5]];;
Error: This expression has type 'a list but an expression was expected of type
         int
─( 13:49:06 )─< command 86 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # List.rev [[3;8]; [4; 5]];;
- : int list list = [[4; 5]; [3; 8]]
─( 13:51:22 )─< command 87 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let rev2 l = List.rev (List.map List.rev l);;
val rev2 : 'a list list -> 'a list list = <fun>
─( 13:51:35 )─< command 88 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # rev2 [[3;4];[5]];;
- : int list list = [[5]; [4; 3]]
─( 13:52:35 )─< command 89 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # rev2 [[3;4];[5;8]];;
- : int list list = [[8; 5]; [4; 3]]
─( 13:52:50 )─< command 90 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # List.fold_left (fun sum e -> sum + e) 0 [1;2;3];;
- : int = 6
─( 13:53:01 )─< command 91 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # List.fold_left (fun sum e -> sum * e) 1 [1;2;3;4];;
- : int = 24
─( 13:55:13 )─< command 92 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let index l =
List.fold_left (fun (l' n) e -> ((e,n) :: l', n + 1)) ([], 0) l;;
Error: Syntax error: ')' expected, the highlighted '(' might be unmatched
─( 13:55:57 )─< command 93 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let index l =
List.fold_left (fun (l', n) e -> ((e,n) :: l', n + 1)) ([], 0) l;;
val index : 'a list -> ('a * int) list * int = <fun>
─( 14:00:21 )─< command 94 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # index [42; 34; 72];;
- : (int * int) list * int = ([(72, 2); (34, 1); (42, 0)], 3)
─( 14:00:54 )─< command 95 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let index l =
List.fold_left (fun (l', n) e -> ((e,n) :: l', n + 1)) ([], 0) l;;
val index : 'a list -> ('a * int) list * int = <fun>
─( 14:01:09 )─< command 96 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # index [42; 35; 17];;
- : (int * int) list * int = ([(17, 2); (35, 1); (42, 0)], 3)
─( 14:01:44 )─< command 97 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let index l =
List.rev fst (List.fold_left (fun (l', n) e -> ((e,n) :: l', n + 1)) ([], 0) l);;
Error: This function has type 'a list -> 'a list
       It is applied to too many arguments; maybe you forgot a `;'.
─( 14:01:57 )─< command 98 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # let index l =
List.rev (fst (List.fold_left (fun (l', n) e -> ((e,n) :: l', n + 1)) ([], 0) l));;
val index : 'a list -> ('a * int) list = <fun>
─( 14:02:58 )─< command 99 >─────────────────────────────────────────────────────────────{ counter: 0 }─
utop # index [42; 35; 17];;
- : (int * int) list = [(42, 0); (35, 1); (17, 2)]
─( 14:03:20 )─< command 100 >────────────────────────────────────────────────────────────{ counter: 0 }─
utop #

~ 53m 33s ❯                                                                                 02:06:57 PM
