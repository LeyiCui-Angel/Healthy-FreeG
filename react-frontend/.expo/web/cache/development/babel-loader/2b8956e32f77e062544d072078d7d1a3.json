{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { DATA } from \"../data/FGList\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Item = function Item(_ref) {\n  var title = _ref.title;\n  return _jsx(View, {\n    style: styles.item,\n    children: _jsx(Text, {\n      style: styles.title,\n      children: title\n    })\n  });\n};\n\nexport default function App() {\n  var _useState = useState(DATA),\n      _useState2 = _slicedToArray(_useState, 2),\n      listData = _useState2[0],\n      setListData = _useState2[1];\n\n  var row = [];\n  var prevOpenedRow;\n\n  var _renderItem = function renderItem(_ref2, onClick) {\n    var item = _ref2.item,\n        index = _ref2.index;\n\n    var closeRow = function closeRow(index) {\n      console.log('closerow');\n\n      if (prevOpenedRow && prevOpenedRow !== row[index]) {\n        prevOpenedRow.close();\n      }\n\n      prevOpenedRow = row[index];\n    };\n\n    var _renderRightActions = function renderRightActions(progress, dragX, onClick) {\n      return _jsx(View, {\n        style: {\n          margin: 0,\n          alignContent: 'center',\n          justifyContent: 'center',\n          width: 70\n        },\n        children: _jsx(Button, {\n          color: \"red\",\n          onPress: onClick,\n          title: \"DELETE\"\n        })\n      });\n    };\n\n    return _jsx(Swipeable, {\n      renderRightActions: function renderRightActions(progress, dragX) {\n        return _renderRightActions(progress, dragX, onClick);\n      },\n      onSwipeableOpen: function onSwipeableOpen() {\n        return closeRow(index);\n      },\n      ref: function ref(_ref3) {\n        return row[index] = _ref3;\n      },\n      rightOpenValue: -100,\n      children: _jsx(View, {\n        style: {\n          margin: 4,\n          borderColor: 'grey',\n          borderWidth: 1,\n          padding: 9,\n          backgroundColor: 'white'\n        },\n        children: _jsx(Text, {\n          children: item.title\n        })\n      })\n    });\n  };\n\n  var deleteItem = function deleteItem(_ref4) {\n    var item = _ref4.item,\n        index = _ref4.index;\n    console.log(item, index);\n    var a = listData;\n    a.splice(index, 1);\n    console.log(a);\n    setListData(_toConsumableArray(a));\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      style: styles.container,\n      children: _jsxs(SectionList, {\n        sections: DATA,\n        keyExtractor: function keyExtractor(item, index) {\n          return item + index;\n        },\n        renderItem: function renderItem(v) {\n          return _renderItem(v, function () {\n            console.log('Pressed', v);\n            deleteItem(v);\n          });\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return item + index;\n        },\n        children: [\"renderSectionHeader=\", function (_ref5) {\n          var title = _ref5.section.title;\n          return _jsx(Text, {\n            style: styles.header,\n            children: title\n          });\n        }, \" \"]\n      })\n    }), _jsx(Button, {\n      title: \"Add food\",\n      color: \"#f194ff\",\n      onPress: function onPress() {\n        return Alert.alert('Recipe scanned! Food added.');\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: StatusBar.currentHeight,\n    backgroundColor: '#ecf0f1',\n    padding: 8,\n    marginHorizontal: 16\n  },\n  item: {\n    backgroundColor: \"#b5c4b1\",\n    padding: 20,\n    marginVertical: 3\n  },\n  header: {\n    fontSize: 25,\n    backgroundColor: \"#bfbfbf\"\n  },\n  title: {\n    fontSize: 12\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/angelcui/HealthyFreeG/screens/TabOneScreen.tsx"],"names":["DATA","React","useState","Swipeable","Item","title","styles","item","App","listData","setListData","row","prevOpenedRow","renderItem","onClick","index","closeRow","console","log","close","renderRightActions","progress","dragX","margin","alignContent","justifyContent","width","ref","borderColor","borderWidth","padding","backgroundColor","deleteItem","a","splice","container","v","section","header","Alert","alert","StyleSheet","create","flex","paddingTop","StatusBar","currentHeight","marginHorizontal","marginVertical","fontSize","paragraph","fontWeight","textAlign"],"mappings":"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","sourcesContent":["import { DATA } from '../data/FGList'\n\nimport * as React from 'react';\nimport { useState } from 'react';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\n\nimport Constants from 'expo-constants';\n\nimport { StyleSheet, Text, View, SafeAreaView, SectionList, StatusBar, Button, Alert } from \"react-native\";\n\nconst Item = ({ title }) => (\n  <View style={styles.item}>\n    <Text style={styles.title}>{title}</Text>\n  </View>\n);\n\nexport default function App() {\n  const [listData, setListData] = useState(DATA);\n  let row: Array<any> = [];\n  let prevOpenedRow;\n\n  /**\n   *\n   */\n  const renderItem = ({ item, index }, onClick) => {\n    //\n    const closeRow = (index) => {\n      console.log('closerow');\n      if (prevOpenedRow && prevOpenedRow !== row[index]) {\n        prevOpenedRow.close();\n      }\n      prevOpenedRow = row[index];\n    };\n\n    const renderRightActions = (progress, dragX, onClick) => {\n      return (\n        <View\n          style={{\n            margin: 0,\n            alignContent: 'center',\n            justifyContent: 'center',\n            width: 70,\n          }}>\n          <Button color=\"red\" onPress={onClick} title=\"DELETE\"></Button>\n        </View>\n      );\n    };\n\n    return (\n      <Swipeable\n        renderRightActions={(progress, dragX) => renderRightActions(progress, dragX, onClick)}\n        onSwipeableOpen={() => closeRow(index)}\n        ref={(ref) => (row[index] = ref)}\n        rightOpenValue={-100}>\n        <View\n          style={{\n            margin: 4,\n            borderColor: 'grey',\n            borderWidth: 1,\n            padding: 9,\n            backgroundColor: 'white',\n          }}>\n          <Text>{item.title}</Text>\n        </View>\n      </Swipeable>\n    );\n  };\n\n  const deleteItem = ({ item, index }) => {\n    console.log(item, index);\n    let a = listData;\n    a.splice(index, 1);\n    console.log(a);\n    setListData([...a]);\n  };\n\n  return (\n    <><View style={styles.container}>\n      <SectionList\n        sections={DATA}\n        keyExtractor={(item, index) => item + index}\n        renderItem={( v ) =>\n          renderItem(v, () =>{\n            console.log('Pressed', v);\n            deleteItem(v);\n          })}\n        keyExtractor={(item, index) => item + index} >\n        renderSectionHeader={({ section: { title } }) => (\n          <Text style={styles.header}>{title}</Text>\n        )} </SectionList>\n    </View><Button\n        title=\"Add food\"\n        color=\"#f194ff\"\n        onPress={() => Alert.alert('Recipe scanned! Food added.')} /></>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: StatusBar.currentHeight,\n    backgroundColor: '#ecf0f1',\n    padding: 8,\n    marginHorizontal: 16\n  },\n  item: {\n    backgroundColor: \"#b5c4b1\",\n    padding: 20,\n    marginVertical: 3\n  },\n  header: {\n    fontSize: 25,\n    backgroundColor: \"#bfbfbf\"\n  },\n  title: {\n    fontSize: 12\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n});"]},"metadata":{},"sourceType":"module"}