{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { Text, View } from \"../components/Themed\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar DATA = [{\n  title: \"Main dishes\",\n  data: [\"Pizza\", \"Burger\", \"Risotto\"]\n}, {\n  title: \"Sides\",\n  data: [\"French Fries\", \"Onion Rings\", \"Fried Shrimps\"]\n}, {\n  title: \"Drinks\",\n  data: [\"Water\", \"Coke\", \"Beer\"]\n}, {\n  title: \"Desserts\",\n  data: [\"Cheese Cake\", \"Ice Cream\"]\n}];\n\nvar Item = function Item(_ref) {\n  var title = _ref.title;\n  return _jsx(View, {\n    style: styles.item,\n    children: _jsx(Text, {\n      style: styles.title,\n      children: title\n    })\n  });\n};\n\n{}\n\nvar TabOneScreen = function TabOneScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(SectionList, {\n      sections: DATA,\n      keyExtractor: function keyExtractor(item, index) {\n        return item + index;\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsx(Item, {\n          title: item\n        });\n      },\n      renderSectionHeader: function renderSectionHeader(_ref4) {\n        var title = _ref4.section.title;\n        return _jsx(Text, {\n          style: styles.header,\n          children: title\n        });\n      }\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: StatusBar.currentHeight,\n    marginHorizontal: 16\n  },\n  item: {\n    backgroundColor: \"#f9c2ff\",\n    padding: 20,\n    marginVertical: 8\n  },\n  header: {\n    fontSize: 32,\n    backgroundColor: \"#fff\"\n  },\n  title: {\n    fontSize: 24\n  }\n});","map":{"version":3,"sources":["/Users/angelcui/HealthyFreeG/screens/TabOneScreen.tsx"],"names":["Text","View","DATA","title","data","Item","styles","item","TabOneScreen","navigation","container","index","section","header","StyleSheet","create","flex","paddingTop","StatusBar","currentHeight","marginHorizontal","backgroundColor","padding","marginVertical","fontSize"],"mappings":";;;;AAEA,SAASA,IAAT,EAAeC,IAAf;;AAGA,IAAMC,IAAI,GAAG,CACX;AACEC,EAAAA,KAAK,EAAE,aADT;AAEEC,EAAAA,IAAI,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,SAApB;AAFR,CADW,EAKX;AACED,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,IAAI,EAAE,CAAC,cAAD,EAAiB,aAAjB,EAAgC,eAAhC;AAFR,CALW,EASX;AACED,EAAAA,KAAK,EAAE,QADT;AAEEC,EAAAA,IAAI,EAAE,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB;AAFR,CATW,EAaX;AACED,EAAAA,KAAK,EAAE,UADT;AAEEC,EAAAA,IAAI,EAAE,CAAC,aAAD,EAAgB,WAAhB;AAFR,CAbW,CAAb;;AAmBA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGF,KAAH,QAAGA,KAAH;AAAA,SACX,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,IAApB;AAAA,cACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACH,KAApB;AAAA,gBAA4BA;AAA5B;AADF,IADW;AAAA,CAAb;;AAMA,CAOI;;AAEJ,IAAMK,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAGC,UAAH,SAAGA,UAAH;AAAA,SACnB,KAAC,YAAD;AAAc,IAAA,KAAK,EAAEH,MAAM,CAACI,SAA5B;AAAA,cACE,KAAC,WAAD;AACE,MAAA,QAAQ,EAAER,IADZ;AAEE,MAAA,YAAY,EAAE,sBAACK,IAAD,EAAOI,KAAP;AAAA,eAAiBJ,IAAI,GAAGI,KAAxB;AAAA,OAFhB;AAGE,MAAA,UAAU,EAAE;AAAA,YAAGJ,IAAH,SAAGA,IAAH;AAAA,eAAc,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEA;AAAb,UAAd;AAAA,OAHd;AAIE,MAAA,mBAAmB,EAAE;AAAA,YAAcJ,KAAd,SAAGS,OAAH,CAAcT,KAAd;AAAA,eACnB,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEG,MAAM,CAACO,MAApB;AAAA,oBAA6BV;AAA7B,UADmB;AAAA;AAJvB;AADF,IADmB;AAAA,CAArB;;AAaA,IAAMG,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,SAAS,EAAE;AACTM,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAEC,SAAS,CAACC,aAFb;AAGTC,IAAAA,gBAAgB,EAAE;AAHT,GADoB;AAM/Bb,EAAAA,IAAI,EAAE;AACJc,IAAAA,eAAe,EAAE,SADb;AAEJC,IAAAA,OAAO,EAAE,EAFL;AAGJC,IAAAA,cAAc,EAAE;AAHZ,GANyB;AAW/BV,EAAAA,MAAM,EAAE;AACNW,IAAAA,QAAQ,EAAE,EADJ;AAENH,IAAAA,eAAe,EAAE;AAFX,GAXuB;AAe/BlB,EAAAA,KAAK,EAAE;AACLqB,IAAAA,QAAQ,EAAE;AADL;AAfwB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, SafeAreaView, SectionList, StatusBar } from \"react-native\";\n\nimport { Text, View } from '../components/Themed';\nimport { RootTabScreenProps } from '../types';\n\nconst DATA = [\n  {\n    title: \"Main dishes\",\n    data: [\"Pizza\", \"Burger\", \"Risotto\"]\n  },\n  {\n    title: \"Sides\",\n    data: [\"French Fries\", \"Onion Rings\", \"Fried Shrimps\"]\n  },\n  {\n    title: \"Drinks\",\n    data: [\"Water\", \"Coke\", \"Beer\"]\n  },\n  {\n    title: \"Desserts\",\n    data: [\"Cheese Cake\", \"Ice Cream\"]\n  }\n];\n\nconst Item = ({ title }) => (\n  <View style={styles.item}>\n    <Text style={styles.title}>{title}</Text>\n  </View>\n);\n\n{/*export default function TabOneScreen({ navigation }: RootTabScreenProps<'TabOne'>) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Free G: Free your fridge!</Text>\n      <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\n    </View>\n  );\n}*/}\n\nconst TabOneScreen = ({ navigation }: RootTabScreenProps<'TabOne'>) => (\n  <SafeAreaView style={styles.container}>\n    <SectionList\n      sections={DATA}\n      keyExtractor={(item, index) => item + index}\n      renderItem={({ item }) => <Item title={item} />}\n      renderSectionHeader={({ section: { title } }) => (\n        <Text style={styles.header}>{title}</Text>\n      )}\n    />\n  </SafeAreaView>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: StatusBar.currentHeight,\n    marginHorizontal: 16\n  },\n  item: {\n    backgroundColor: \"#f9c2ff\",\n    padding: 20,\n    marginVertical: 8\n  },\n  header: {\n    fontSize: 32,\n    backgroundColor: \"#fff\"\n  },\n  title: {\n    fontSize: 24\n  }\n});\n\n"]},"metadata":{},"sourceType":"module"}