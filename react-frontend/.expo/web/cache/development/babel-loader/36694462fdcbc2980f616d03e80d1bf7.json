{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Text, View } from \"../components/Themed\";\nimport { Data } from \"../data/FGList\";\nimport { StatusBar } from 'expo-status-bar';\nimport moment from 'moment';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\n\nvar _Dimensions$get = Dimensions.get('screen'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nimport { FontAwesome } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Item = function Item(_ref) {\n  var title = _ref.title;\n  return _jsx(View, {\n    style: styles.item,\n    children: _jsx(Text, {\n      style: styles.title,\n      children: title\n    })\n  });\n};\n\nvar RenderRight = function RenderRight(progress, dragX) {\n  var scale = dragX.interpolate({\n    inputRange: [-50, 0.5],\n    outputRange: [1, 0.1]\n  });\n  var Style = {\n    transform: [{\n      scale: scale\n    }]\n  };\n  return _jsx(View, {\n    style: {\n      width: 80,\n      backgroundColor: 'red',\n      alignItems: \"center\",\n      justifyContent: 'center'\n    },\n    children: _jsx(Animated.Text, {\n      style: [Style, {\n        color: '#fff',\n        fontWeight: \"600\"\n      }],\n      children: \"Delete\"\n    })\n  });\n};\n\nvar RenderLeft = function RenderLeft(progress, dragX) {\n  var scale = dragX.interpolate({\n    inputRange: [0.5, 50],\n    outputRange: [0.1, 1]\n  });\n  var Style = {\n    transform: [{\n      scale: scale\n    }]\n  };\n  return _jsx(View, {\n    style: {\n      width: 80,\n      backgroundColor: 'blue',\n      alignItems: \"center\",\n      justifyContent: 'center'\n    },\n    children: _jsx(Animated.Text, {\n      style: [Style, {\n        color: '#fff',\n        fontWeight: \"600\"\n      }],\n      children: \"Like\"\n    })\n  });\n};\n\nvar RenderItem = function RenderItem(_ref2) {\n  var item = _ref2.item,\n      index = _ref2.index,\n      deleteItem = _ref2.deleteItem,\n      likeItem = _ref2.likeItem;\n  return _jsx(Swipeable, {\n    useNativeAnimations: true,\n    overshootLeft: false,\n    onSwipeableLeftOpen: function onSwipeableLeftOpen() {\n      return likeItem(item.id);\n    },\n    renderLeftActions: RenderLeft,\n    overshootRight: false,\n    onSwipeableRightOpen: function onSwipeableRightOpen() {\n      return deleteItem(item.id);\n    },\n    renderRightActions: RenderRight,\n    children: _jsxs(View, {\n      style: styles.item,\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: \"center\",\n          justifyContent: 'space-between',\n          width: '20%'\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontWeight: '600'\n          },\n          children: item.name\n        }), _jsx(Text, {\n          style: {\n            fontSize: 12\n          },\n          children: item.likes || 0\n        })]\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          paddingVertical: 5\n        },\n        children: [_jsx(Text, {\n          children: item.Message\n        }), _jsx(Text, {\n          children: moment(item.timeStamp).format(\"LT\")\n        })]\n      })]\n    })\n  });\n};\n\nvar LikeDisplayer = function LikeDisplayer() {\n  return _jsx(View, {\n    style: [styles.likeDisplayer],\n    children: _jsx(FontAwesome, {\n      name: \"heart\",\n      color: \"red\",\n      size: 200\n    })\n  });\n};\n\nvar TabOneScreen = function TabOneScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(SectionList, {\n      sections: Data,\n      keyExtractor: function keyExtractor(item, index) {\n        return item + index;\n      },\n      renderItem: function renderItem(_ref4) {\n        var item = _ref4.item;\n        return _jsx(Item, {\n          title: item\n        });\n      },\n      renderSectionHeader: function renderSectionHeader(_ref5) {\n        var title = _ref5.section.title;\n        return _jsx(Text, {\n          style: styles.header,\n          children: title\n        });\n      }\n    }), _jsx(Button, {\n      title: \"Add food\",\n      color: \"#f194ff\",\n      onPress: function onPress() {\n        return Alert.alert('Recipe scanned! Food added.');\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: StatusBar.currentHeight,\n    marginHorizontal: 16\n  },\n  item: {\n    backgroundColor: \"#b5c4b1\",\n    padding: 20,\n    marginVertical: 3\n  },\n  header: {\n    fontSize: 25,\n    backgroundColor: \"#bfbfbf\"\n  },\n  title: {\n    fontSize: 12\n  }\n});\nexport default TabOneScreen;","map":{"version":3,"sources":["/Users/angelcui/HealthyFreeG/screens/TabOneScreen.tsx"],"names":["React","Text","View","Data","StatusBar","moment","Swipeable","Dimensions","get","width","height","FontAwesome","Item","title","styles","item","RenderRight","progress","dragX","scale","interpolate","inputRange","outputRange","Style","transform","backgroundColor","alignItems","justifyContent","color","fontWeight","RenderLeft","RenderItem","index","deleteItem","likeItem","id","flexDirection","name","fontSize","likes","paddingVertical","Message","timeStamp","format","LikeDisplayer","likeDisplayer","TabOneScreen","navigation","container","section","header","Alert","alert","StyleSheet","create","flex","paddingTop","currentHeight","marginHorizontal","padding","marginVertical"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { StyleSheet, SafeAreaView, SectionList, Button, Alert, Dimensions, Animated, } from \"react-native\";\n\nimport { Text, View } from '../components/Themed';\nimport { RootTabScreenProps } from '../types';\n\nimport { Data } from '../data/FGList'\nimport { StatusBar } from 'expo-status-bar';\nimport moment from 'moment'\nimport Swipeable from 'react-native-gesture-handler/Swipeable'\nconst  {width, height} = Dimensions.get('screen')\nimport {FontAwesome} from '@expo/vector-icons'\n\nconst Item = ({ title }) => (\n  <View style={styles.item}>\n    <Text style={styles.title}>{title}</Text>\n  </View>\n);\n\n// Swiping the botton\nconst RenderRight = (progress, dragX) => {\n  const scale = dragX.interpolate({\n    inputRange: [-50, 0.5],\n    outputRange: [1, 0.1]\n  })\n\n  const Style = {\n    transform : [\n      {\n        scale\n      }\n    ]\n  }\n\n  return (\n    <View style={{width: 80, backgroundColor: 'red', alignItems: \"center\", justifyContent: 'center'}}>\n      <Animated.Text style={[Style, {color: '#fff', fontWeight: \"600\"}]}>Delete</Animated.Text>\n    </View>\n  )\n}\n\nconst RenderLeft = (progress, dragX) => {\n  const scale = dragX.interpolate({\n    inputRange: [0.5, 50],\n    outputRange: [0.1, 1]\n  })\n\n  const Style = {\n    transform : [\n      {\n        scale\n      }\n    ]\n  }\n\n  return (\n    <View style={{width: 80, backgroundColor: 'blue', alignItems: \"center\", justifyContent: 'center'}}>\n      <Animated.Text style={[Style, {color: '#fff', fontWeight: \"600\"}]}>Like</Animated.Text>\n    </View>\n  )\n}\n\nconst RenderItem = ({item ,index, deleteItem, likeItem}) => {\n\n  return (\n    <Swipeable useNativeAnimations overshootLeft={false} onSwipeableLeftOpen={() => likeItem(item.id)} renderLeftActions={RenderLeft} overshootRight={false} onSwipeableRightOpen={() => deleteItem(item.id)} renderRightActions={RenderRight}>\n      <View style={styles.item}>\n      <View style={{flexDirection: 'row', alignItems: \"center\", justifyContent: 'space-between', width: '20%'}}>\n      <Text style={{fontWeight: '600'}}>{item.name}</Text>\n      <Text style={{fontSize: 12}}>{item.likes || 0}</Text>\n      </View>\n      <View style={{flexDirection: 'row', justifyContent: 'space-between', paddingVertical: 5}}>\n        <Text>{item.Message}</Text>\n        <Text>{moment(item.timeStamp).format(\"LT\")}</Text>\n      </View>\n    </View>\n    </Swipeable>\n  )\n} \n\nconst LikeDisplayer = () => {\n  return (\n    <View style={[styles.likeDisplayer]}>\n      <FontAwesome name=\"heart\" color=\"red\" size={200} />\n    </View>\n  )\n}\n\nconst TabOneScreen = ({ navigation }: RootTabScreenProps<'TabOne'>) => (\n  \n  <SafeAreaView style={styles.container}>\n    <SectionList\n      sections={Data}\n      keyExtractor={(item, index) => item + index}\n      renderItem={({ item }) => <Item title={item} />}\n      renderSectionHeader={({ section: { title } }) => (\n        <Text style={styles.header}>{title}</Text>\n      )}\n    />\n    <Button\n        title=\"Add food\"\n        color=\"#f194ff\"\n        onPress={() => Alert.alert('Recipe scanned! Food added.')}\n    />\n  </SafeAreaView>\n);\n\n// Style\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: StatusBar.currentHeight,\n    marginHorizontal: 16\n  },\n  item: {\n    backgroundColor: \"#b5c4b1\",\n    padding: 20,\n    marginVertical: 3\n  },\n  header: {\n    fontSize: 25,\n    backgroundColor: \"#bfbfbf\"\n  },\n  title: {\n    fontSize: 12\n  }\n});\n\nexport default TabOneScreen;"]},"metadata":{},"sourceType":"module"}