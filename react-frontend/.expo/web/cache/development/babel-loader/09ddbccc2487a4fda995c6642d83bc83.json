{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Text, View } from \"../components/Themed\";\nimport { Data } from \"../data/FGList\";\nimport { StatusBar } from 'expo-status-bar';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Item = function Item(_ref) {\n  var title = _ref.title;\n  return _jsx(View, {\n    style: styles.item,\n    children: _jsx(Text, {\n      style: styles.title,\n      children: title\n    })\n  });\n};\n\nvar TabOneScreen = function TabOneScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(Swipeable, {\n      renderRightActions: function (_renderRightActions) {\n        function renderRightActions(_x, _x2) {\n          return _renderRightActions.apply(this, arguments);\n        }\n\n        renderRightActions.toString = function () {\n          return _renderRightActions.toString();\n        };\n\n        return renderRightActions;\n      }(function (progress, dragX) {\n        return renderRightActions(progress, dragX, onClick);\n      }),\n      onSwipeableOpen: function onSwipeableOpen() {\n        return closeRow(index);\n      },\n      ref: function ref(_ref5) {\n        return row[index] = _ref5;\n      },\n      rightOpenValue: -100,\n      children: _jsx(SectionList, {\n        sections: Data,\n        keyExtractor: function keyExtractor(item, index) {\n          return item + index;\n        },\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return _jsx(Item, {\n            title: item\n          });\n        },\n        renderSectionHeader: function renderSectionHeader(_ref4) {\n          var title = _ref4.section.title;\n          return _jsx(Text, {\n            style: styles.header,\n            children: title\n          });\n        }\n      })\n    }), _jsx(Button, {\n      title: \"Add food\",\n      color: \"#f194ff\",\n      onPress: function onPress() {\n        return Alert.alert('Recipe scanned! Food added.');\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: StatusBar.currentHeight,\n    marginHorizontal: 16\n  },\n  item: {\n    backgroundColor: \"#b5c4b1\",\n    padding: 20,\n    marginVertical: 3\n  },\n  header: {\n    fontSize: 25,\n    backgroundColor: \"#bfbfbf\"\n  },\n  title: {\n    fontSize: 12\n  }\n});\nexport default TabOneScreen;","map":{"version":3,"sources":["/Users/angelcui/HealthyFreeG/screens/TabOneScreen.tsx"],"names":["React","Text","View","Data","StatusBar","Swipeable","Item","title","styles","item","TabOneScreen","navigation","container","progress","dragX","renderRightActions","onClick","closeRow","index","ref","row","section","header","Alert","alert","StyleSheet","create","flex","justifyContent","paddingTop","currentHeight","marginHorizontal","backgroundColor","padding","marginVertical","fontSize"],"mappings":"AAAA,OAAOA,KAAP,MAAiC,OAAjC;;;;;;AAGA,SAASC,IAAT,EAAeC,IAAf;AAGA,SAASC,IAAT;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,OAAOC,SAAP,MAAsB,wCAAtB;;;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SACX,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA,cACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACD,KAApB;AAAA,gBAA4BA;AAA5B;AADF,IADW;AAAA,CAAb;;AAMA,IAAMG,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAGC,UAAH,SAAGA,UAAH;AAAA,SACnB,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEH,MAAM,CAACI,SAA5B;AAAA,eAEE,KAAC,SAAD;AACI,MAAA,kBAAkB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,QAAE,UAACC,QAAD,EAAWC,KAAX;AAAA,eAClBC,kBAAkB,CAACF,QAAD,EAAWC,KAAX,EAAkBE,OAAlB,CADA;AAAA,OAAF,CADtB;AAII,MAAA,eAAe,EAAE;AAAA,eAAMC,QAAQ,CAACC,KAAD,CAAd;AAAA,OAJrB;AAKI,MAAA,GAAG,EAAE,aAACC,KAAD;AAAA,eAAUC,GAAG,CAACF,KAAD,CAAH,GAAaC,KAAvB;AAAA,OALT;AAMI,MAAA,cAAc,EAAE,CAAC,GANrB;AAAA,gBAOA,KAAC,WAAD;AACE,QAAA,QAAQ,EAAEhB,IADZ;AAEE,QAAA,YAAY,EAAE,sBAACM,IAAD,EAAOS,KAAP;AAAA,iBAAiBT,IAAI,GAAGS,KAAxB;AAAA,SAFhB;AAGE,QAAA,UAAU,EAAE;AAAA,cAAGT,IAAH,SAAGA,IAAH;AAAA,iBAAc,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEA;AAAb,YAAd;AAAA,SAHd;AAIE,QAAA,mBAAmB,EAAE;AAAA,cAAcF,KAAd,SAAGc,OAAH,CAAcd,KAAd;AAAA,iBACnB,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEC,MAAM,CAACc,MAApB;AAAA,sBAA6Bf;AAA7B,YADmB;AAAA;AAJvB;AAPA,MAFF,EAkBE,KAAC,MAAD;AACI,MAAA,KAAK,EAAC,UADV;AAEI,MAAA,KAAK,EAAC,SAFV;AAGI,MAAA,OAAO,EAAE;AAAA,eAAMgB,KAAK,CAACC,KAAN,CAAY,6BAAZ,CAAN;AAAA;AAHb,MAlBF;AAAA,IADmB;AAAA,CAArB;;AA4BA,IAAMhB,MAAM,GAAGiB,UAAU,CAACC,MAAX,CAAkB;AAC/Bd,EAAAA,SAAS,EAAE;AACTe,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAEzB,SAAS,CAAC0B,aAHb;AAITC,IAAAA,gBAAgB,EAAE;AAJT,GADoB;AAO/BtB,EAAAA,IAAI,EAAE;AACJuB,IAAAA,eAAe,EAAE,SADb;AAEJC,IAAAA,OAAO,EAAE,EAFL;AAGJC,IAAAA,cAAc,EAAE;AAHZ,GAPyB;AAY/BZ,EAAAA,MAAM,EAAE;AACNa,IAAAA,QAAQ,EAAE,EADJ;AAENH,IAAAA,eAAe,EAAE;AAFX,GAZuB;AAgB/BzB,EAAAA,KAAK,EAAE;AACL4B,IAAAA,QAAQ,EAAE;AADL;AAhBwB,CAAlB,CAAf;AAqBA,eAAezB,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Animated, StyleSheet, SafeAreaView, SectionList, Button, Alert, } from \"react-native\";\n\nimport { Text, View } from '../components/Themed';\nimport { RootTabScreenProps } from '../types';\n\nimport { Data } from '../data/FGList'\nimport { StatusBar } from 'expo-status-bar';\n\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\n\nconst Item = ({ title }) => (\n  <View style={styles.item}>\n    <Text style={styles.title}>{title}</Text>\n  </View>\n);\n\nconst TabOneScreen = ({ navigation }: RootTabScreenProps<'TabOne'>) => (\n  <SafeAreaView style={styles.container}>\n\n    <Swipeable\n        renderRightActions={(progress, dragX) =>\n          renderRightActions(progress, dragX, onClick)\n        }\n        onSwipeableOpen={() => closeRow(index)}\n        ref={(ref) => (row[index] = ref)}\n        rightOpenValue={-100}>\n    <SectionList\n      sections={Data}\n      keyExtractor={(item, index) => item + index}\n      renderItem={({ item }) => <Item title={item} />}\n      renderSectionHeader={({ section: { title } }) => (\n        <Text style={styles.header}>{title}</Text>\n      )}\n    />\n    </Swipeable>\n    <Button\n        title=\"Add food\"\n        color=\"#f194ff\"\n        onPress={() => Alert.alert('Recipe scanned! Food added.')}\n    />\n  </SafeAreaView>\n);\n\n// Style\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: StatusBar.currentHeight,\n    marginHorizontal: 16\n  },\n  item: {\n    backgroundColor: \"#b5c4b1\",\n    padding: 20,\n    marginVertical: 3\n  },\n  header: {\n    fontSize: 25,\n    backgroundColor: \"#bfbfbf\"\n  },\n  title: {\n    fontSize: 12\n  }\n});\n\nexport default TabOneScreen;"]},"metadata":{},"sourceType":"module"}