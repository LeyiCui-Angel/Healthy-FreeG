{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { GestureHandler } from 'expo';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Swipeable = GestureHandler.Swipeable;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    paddingHorizontal: 10,\n    paddingVertical: 20\n  },\n  text: {\n    color: '#4a4a4a',\n    fontSize: 15\n  },\n  separator: {\n    flex: 1,\n    height: 1,\n    backgroundColor: '#e4e4e4',\n    marginLeft: 10\n  },\n  leftAction: {\n    backgroundColor: '#388e3c',\n    justifyContent: 'center',\n    flex: 1\n  },\n  rightAction: {\n    backgroundColor: '#dd2c00',\n    justifyContent: 'center',\n    alignItems: 'flex-end'\n  },\n  actionText: {\n    color: '#fff',\n    fontWeight: '600',\n    padding: 20\n  }\n});\nexport var Separator = function Separator() {\n  return _jsx(View, {\n    style: styles.separator\n  });\n};\n\nvar LeftActions = function LeftActions(progress, dragX) {\n  var scale = dragX.interpolate({\n    inputRange: [0, 100],\n    outputRange: [0, 1],\n    extrapolate: 'clamp'\n  });\n  return _jsx(View, {\n    style: styles.leftAction,\n    children: _jsx(Animated.Text, {\n      style: [styles.actionText, {\n        transform: [{\n          scale: scale\n        }]\n      }],\n      children: \"Add to Cart\"\n    })\n  });\n};\n\nvar RightActions = function RightActions(_ref) {\n  var progress = _ref.progress,\n      dragX = _ref.dragX,\n      onPress = _ref.onPress;\n  var scale = dragX.interpolate({\n    inputRange: [-100, 0],\n    outputRange: [1, 0],\n    extrapolate: 'clamp'\n  });\n  return _jsx(TouchableOpacity, {\n    onPress: onPress,\n    children: _jsx(View, {\n      style: styles.rightAction,\n      children: _jsx(Animated.Text, {\n        style: [styles.actionText, {\n          transform: [{\n            scale: scale\n          }]\n        }],\n        children: \"Delete\"\n      })\n    })\n  });\n};\n\nvar ListItem = function ListItem(_ref2) {\n  var text = _ref2.text,\n      onSwipeFromLeft = _ref2.onSwipeFromLeft,\n      onRightPress = _ref2.onRightPress;\n  return _jsx(Swipeable, {\n    renderLeftActions: LeftActions,\n    onSwipeableLeftOpen: onSwipeFromLeft,\n    renderRightActions: function renderRightActions(progress, dragX) {\n      return _jsx(RightActions, {\n        progress: progress,\n        dragX: dragX,\n        onPress: onRightPress\n      });\n    },\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsx(Text, {\n        style: styles.text,\n        children: text\n      })\n    })\n  });\n};\n\nexport default ListItem;","map":{"version":3,"sources":["/Users/angelcui/HealthyFreeG/components/ListItems.js"],"names":["React","GestureHandler","Swipeable","styles","StyleSheet","create","container","backgroundColor","paddingHorizontal","paddingVertical","text","color","fontSize","separator","flex","height","marginLeft","leftAction","justifyContent","rightAction","alignItems","actionText","fontWeight","padding","Separator","LeftActions","progress","dragX","scale","interpolate","inputRange","outputRange","extrapolate","transform","RightActions","onPress","ListItem","onSwipeFromLeft","onRightPress"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Animated,\n  TouchableOpacity,\n} from 'react-native';\n// import Swipeable from 'react-native-gesture-handler/Swipeable';\nimport { GestureHandler } from 'expo';\nconst { Swipeable } = GestureHandler;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    paddingHorizontal: 10,\n    paddingVertical: 20,\n  },\n  text: {\n    color: '#4a4a4a',\n    fontSize: 15,\n  },\n  separator: {\n    flex: 1,\n    height: 1,\n    backgroundColor: '#e4e4e4',\n    marginLeft: 10,\n  },\n  leftAction: {\n    backgroundColor: '#388e3c',\n    justifyContent: 'center',\n    flex: 1,\n  },\n  rightAction: {\n    backgroundColor: '#dd2c00',\n    justifyContent: 'center',\n    // flex: 1,\n    alignItems: 'flex-end',\n  },\n  actionText: {\n    color: '#fff',\n    fontWeight: '600',\n    padding: 20,\n  },\n});\n\nexport const Separator = () => <View style={styles.separator} />;\n\nconst LeftActions = (progress, dragX) => {\n  const scale = dragX.interpolate({\n    inputRange: [0, 100],\n    outputRange: [0, 1],\n    extrapolate: 'clamp',\n  });\n  return (\n    <View style={styles.leftAction}>\n      <Animated.Text style={[styles.actionText, { transform: [{ scale }] }]}>\n        Add to Cart\n      </Animated.Text>\n    </View>\n  );\n};\n\nconst RightActions = ({ progress, dragX, onPress }) => {\n  const scale = dragX.interpolate({\n    inputRange: [-100, 0],\n    outputRange: [1, 0],\n    extrapolate: 'clamp',\n  });\n  return (\n    <TouchableOpacity onPress={onPress}>\n      <View style={styles.rightAction}>\n        <Animated.Text style={[styles.actionText, { transform: [{ scale }] }]}>\n          Delete\n        </Animated.Text>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst ListItem = ({ text, onSwipeFromLeft, onRightPress }) => (\n  <Swipeable\n    renderLeftActions={LeftActions}\n    onSwipeableLeftOpen={onSwipeFromLeft}\n    renderRightActions={(progress, dragX) => (\n      <RightActions progress={progress} dragX={dragX} onPress={onRightPress} />\n    )}\n  >\n    <View style={styles.container}>\n      <Text style={styles.text}>{text}</Text>\n    </View>\n  </Swipeable>\n);\n\nexport default ListItem;"]},"metadata":{},"sourceType":"module"}