{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useEffect, useReducer, useMemo } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { styles } from \"./styles\";\nimport white_chevron from \"./assets/images/white.png\";\nimport black_chevron from \"./assets/images/black.png\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar initialState = {\n  opened: false,\n  height: [],\n  data: [],\n  isMounted: [],\n  lastSelectedIndex: -1,\n  selectedIndex: -1,\n  opacityValues: new Animated.Value(0),\n  animatedValues: [],\n  rotateValueHolder: []\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'set':\n      return _objectSpread(_objectSpread({}, state), action);\n\n    case 'reset':\n      return {\n        opened: false,\n        height: [],\n        data: [],\n        isMounted: [],\n        lastSelectedIndex: -1,\n        selectedIndex: -1,\n        opacityValues: new Animated.Value(0),\n        animatedValues: [],\n        rotateValueHolder: []\n      };\n\n    default:\n      return _objectSpread({}, state);\n  }\n}\n\nexport var ExpandableListView = function ExpandableListView(_ref) {\n  var data = _ref.data,\n      innerItemLabelStyle = _ref.innerItemLabelStyle,\n      renderItemSeparator = _ref.renderItemSeparator,\n      renderInnerItemSeparator = _ref.renderInnerItemSeparator,\n      onInnerItemClick = _ref.onInnerItemClick,\n      onItemClick = _ref.onItemClick,\n      defaultLoaderStyles = _ref.defaultLoaderStyles,\n      itemSeparatorStyle = _ref.itemSeparatorStyle,\n      itemLabelStyle = _ref.itemLabelStyle,\n      itemImageIndicatorStyle = _ref.itemImageIndicatorStyle,\n      itemContainerStyle = _ref.itemContainerStyle,\n      innerItemSeparatorStyle = _ref.innerItemSeparatorStyle,\n      innerItemContainerStyle = _ref.innerItemContainerStyle,\n      customLoader = _ref.customLoader,\n      customChevron = _ref.customChevron,\n      _ref$animated = _ref.animated,\n      animated = _ref$animated === void 0 ? true : _ref$animated,\n      chevronColor = _ref.chevronColor,\n      ExpandableListViewStyles = _ref.ExpandableListViewStyles;\n\n  var _useReducer = useReducer(reducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var CustomLoader = customLoader;\n  useEffect(function () {\n    if (state.selectedIndex >= 0) {\n      if (state.animatedValues[state.selectedIndex] !== undefined) {\n        if (state.selectedIndex !== state.lastSelectedIndex) {\n          if (state.lastSelectedIndex >= 0 && state.lastSelectedIndex < state.data.length) {\n            Animated.parallel([Animated.timing(state.animatedValues[state.lastSelectedIndex], {\n              useNativeDriver: false,\n              duration: 300,\n              easing: Easing.linear,\n              toValue: 0\n            }), Animated.timing(state.rotateValueHolder[state.lastSelectedIndex], {\n              toValue: 0,\n              duration: 300,\n              easing: Easing.linear,\n              useNativeDriver: true\n            })]).start();\n          }\n\n          Animated.parallel([Animated.timing(state.animatedValues[state.selectedIndex], {\n            useNativeDriver: false,\n            duration: 300,\n            easing: Easing.linear,\n            toValue: state.height[state.selectedIndex]\n          }), Animated.timing(state.rotateValueHolder[state.selectedIndex], {\n            toValue: 1,\n            duration: 300,\n            easing: Easing.linear,\n            useNativeDriver: true\n          })]).start();\n        } else {\n          Animated.parallel([Animated.timing(state.animatedValues[state.selectedIndex], {\n            useNativeDriver: false,\n            duration: 300,\n            easing: Easing.linear,\n            toValue: state.opened && state.height !== undefined && state.height[state.selectedIndex] !== undefined ? state.height[state.selectedIndex] : 0\n          }), Animated.timing(state.rotateValueHolder[state.selectedIndex], {\n            toValue: state.opened ? 1 : 0,\n            duration: 300,\n            easing: Easing.linear,\n            useNativeDriver: true\n          })]).start();\n        }\n\n        dispatch({\n          type: 'set',\n          lastSelectedIndex: state.selectedIndex\n        });\n      }\n    } else {\n      if (state.isMounted.length === state.data.length && state.data.length > 0) {\n        Animated.timing(state.opacityValues, {\n          toValue: 1,\n          duration: 300,\n          easing: Easing.linear,\n          useNativeDriver: true\n        }).start();\n      }\n    }\n  }, [state.data, state.height, state.opened, state.isMounted, state.opacityValues, state.animatedValues, state.rotateValueHolder, state.selectedIndex, state.lastSelectedIndex]);\n  useEffect(function () {\n    function reset() {\n      return _regeneratorRuntime.async(function reset$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(dispatch({\n                type: 'reset'\n              }));\n\n            case 2:\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(dispatch({\n                type: 'set',\n                data: data\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    reset();\n  }, [data]);\n\n  function handleLayout(evt, index) {\n    if (!state.isMounted[index] && evt.nativeEvent.layout.height !== 0) {\n      var h = state.height;\n      h[index] = evt.nativeEvent.layout.height;\n      var m = state.isMounted;\n      m[index] = true;\n\n      var newAnimatedValues = _toConsumableArray(state.animatedValues);\n\n      var newRotateValueHolder = _toConsumableArray(state.rotateValueHolder);\n\n      newAnimatedValues.push(new Animated.Value(0));\n      newRotateValueHolder.push(new Animated.Value(0));\n      dispatch({\n        type: 'set',\n        animatedValues: newAnimatedValues,\n        rotateValueHolder: newRotateValueHolder,\n        height: h,\n        isMounted: m\n      });\n    }\n  }\n\n  function updateLayout(updatedIndex) {\n    dispatch({\n      type: 'set',\n      opened: updatedIndex === state.selectedIndex ? !state.opened : true,\n      selectedIndex: updatedIndex\n    });\n\n    if (onItemClick) {\n      return onItemClick({\n        index: updatedIndex\n      });\n    }\n\n    return;\n  }\n\n  var List = useMemo(function () {\n    return Animated.FlatList;\n  }, []);\n\n  function renderInnerItem(itemO, headerItem, headerIndex) {\n    var item = itemO.item;\n    var index = itemO.index;\n    var CustomComponent = item.customInnerItem;\n\n    var container = _objectSpread(_objectSpread(_objectSpread({}, styles.content), innerItemContainerStyle), {}, {\n      height: undefined\n    });\n\n    innerItemLabelStyle = _objectSpread(_objectSpread(_objectSpread({}, styles.text), innerItemLabelStyle), {}, {\n      height: undefined\n    });\n    innerItemSeparatorStyle = _objectSpread(_objectSpread({}, styles.innerItemSeparator), innerItemSeparatorStyle);\n    return _jsxs(_Fragment, {\n      children: [_jsx(TouchableOpacity, {\n        activeOpacity: 0.6,\n        style: container,\n        onPress: function onPress() {\n          return onInnerItemClick && onInnerItemClick({\n            innerItemIndex: index,\n            item: headerItem,\n            itemIndex: headerIndex\n          });\n        },\n        children: CustomComponent !== undefined ? CustomComponent : _jsx(Text, {\n          style: innerItemLabelStyle,\n          children: item.name\n        })\n      }, Math.random()), renderInnerItemSeparator !== undefined && renderInnerItemSeparator && index < headerItem.subCategory.length - 1 && _jsx(View, {\n        style: innerItemSeparatorStyle\n      })]\n    });\n  }\n\n  function _renderItem(_ref2) {\n    var item = _ref2.item,\n        index = _ref2.index;\n    itemContainerStyle = _objectSpread(_objectSpread(_objectSpread({}, styles.header), itemContainerStyle), {}, {\n      height: undefined\n    });\n    itemLabelStyle = _objectSpread(_objectSpread({}, styles.headerText), itemLabelStyle);\n    itemImageIndicatorStyle = _objectSpread({\n      height: 15,\n      width: 15,\n      marginHorizontal: 5\n    }, itemImageIndicatorStyle);\n    itemSeparatorStyle = _objectSpread(_objectSpread({}, styles.headerSeparator), itemSeparatorStyle);\n    var CustomComponent = item.customItem;\n    return _jsxs(Animated.View, {\n      style: {\n        height: undefined\n      },\n      children: [_jsx(TouchableOpacity, {\n        activeOpacity: 0.6,\n        onPress: function onPress() {\n          return updateLayout(index);\n        },\n        style: itemContainerStyle,\n        children: CustomComponent !== undefined ? CustomComponent : _jsxs(_Fragment, {\n          children: [_jsx(Animated.Image, {\n            source: customChevron !== undefined ? customChevron : chevronColor !== undefined && chevronColor === 'white' ? white_chevron : black_chevron,\n            resizeMethod: \"scale\",\n            resizeMode: \"contain\",\n            style: [itemImageIndicatorStyle, animated === undefined || animated !== undefined && animated ? state.rotateValueHolder[index] !== undefined && {\n              transform: [{\n                rotate: state.rotateValueHolder[index].interpolate({\n                  inputRange: [0, 1],\n                  outputRange: ['0deg', '90deg']\n                })\n              }]\n            } : {\n              transform: [{\n                rotate: state.opened && index === state.selectedIndex ? '90deg' : '0deg'\n              }]\n            }]\n          }), _jsx(Text, {\n            style: itemLabelStyle,\n            children: item.categoryName\n          })]\n        })\n      }), _jsx(Animated.View, {\n        style: [animated === undefined || animated !== undefined && animated ? {\n          height: !state.isMounted[index] ? undefined : state.animatedValues[index],\n          overflow: 'hidden'\n        } : {\n          display: state.opened && index === state.selectedIndex ? 'flex' : 'none',\n          overflow: 'hidden'\n        }],\n        onLayout: function onLayout(evt) {\n          return handleLayout(evt, index);\n        },\n        children: _jsx(FlatList, {\n          style: {\n            height: undefined\n          },\n          contentContainerStyle: {\n            height: undefined\n          },\n          updateCellsBatchingPeriod: 50,\n          initialNumToRender: 50,\n          windowSize: 50,\n          maxToRenderPerBatch: 50,\n          keyExtractor: function keyExtractor() {\n            return Math.random().toString();\n          },\n          listKey: String(Math.random()),\n          data: item.subCategory,\n          renderItem: function renderItem(innerItem) {\n            return renderInnerItem(innerItem, item, index);\n          }\n        })\n      }), renderItemSeparator !== undefined && renderItemSeparator && (!state.opened || state.selectedIndex !== index) && index < state.data.length - 1 && _jsx(View, {\n        style: itemSeparatorStyle\n      })]\n    });\n  }\n\n  return _jsxs(_Fragment, {\n    children: [animated && data.length > 0 && state.isMounted[data.length - 1] === undefined && (CustomLoader !== undefined ? CustomLoader : _jsx(ActivityIndicator, {\n      style: defaultLoaderStyles,\n      color: \"#94bfda\",\n      size: \"large\"\n    })), _jsx(Animated.View, {\n      style: [{\n        opacity: animated === undefined || animated !== undefined && animated ? state.isMounted.length === state.data.length && data.length > 0 ? state.opacityValues : 0 : 1\n      }, _objectSpread({}, ExpandableListViewStyles), {\n        height: animated && data.length > 0 && state.isMounted[data.length - 1] === undefined ? 0 : (ExpandableListViewStyles == null ? void 0 : ExpandableListViewStyles.height) !== undefined ? ExpandableListViewStyles == null ? void 0 : ExpandableListViewStyles.height : 'auto'\n      }],\n      children: _jsx(List, {\n        updateCellsBatchingPeriod: 50,\n        initialNumToRender: 50,\n        windowSize: 50,\n        maxToRenderPerBatch: 50,\n        keyExtractor: function keyExtractor(_, itemIndex) {\n          return itemIndex.toString();\n        },\n        data: state.data,\n        renderItem: function renderItem(item) {\n          return _renderItem(item);\n        }\n      })\n    })]\n  });\n};","map":{"version":3,"sources":["/Users/angelcui/HealthyFreeG/node_modules/react-native-expandable-listview/src/index.tsx"],"names":["React","useEffect","useReducer","useMemo","styles","white_chevron","black_chevron","initialState","opened","height","data","isMounted","lastSelectedIndex","selectedIndex","opacityValues","Animated","Value","animatedValues","rotateValueHolder","reducer","state","action","type","ExpandableListView","innerItemLabelStyle","renderItemSeparator","renderInnerItemSeparator","onInnerItemClick","onItemClick","defaultLoaderStyles","itemSeparatorStyle","itemLabelStyle","itemImageIndicatorStyle","itemContainerStyle","innerItemSeparatorStyle","innerItemContainerStyle","customLoader","customChevron","animated","chevronColor","ExpandableListViewStyles","dispatch","CustomLoader","undefined","length","parallel","timing","useNativeDriver","duration","easing","Easing","linear","toValue","start","reset","handleLayout","evt","index","nativeEvent","layout","h","m","newAnimatedValues","newRotateValueHolder","push","updateLayout","updatedIndex","List","FlatList","renderInnerItem","itemO","headerItem","headerIndex","item","CustomComponent","customInnerItem","container","content","text","innerItemSeparator","innerItemIndex","itemIndex","name","Math","random","subCategory","renderItem","header","headerText","width","marginHorizontal","headerSeparator","customItem","transform","rotate","interpolate","inputRange","outputRange","categoryName","overflow","display","toString","String","innerItem","opacity","_"],"mappings":"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","sourcesContent":["import React, {useEffect, useReducer, useMemo} from 'react';\n\nimport {\n  ActivityIndicator,\n  TouchableOpacity,\n  Animated,\n  Text,\n  Easing,\n  View,\n  ViewStyle,\n  TextStyle,\n  ImageStyle,\n  LayoutChangeEvent,\n  FlatList,\n} from 'react-native';\n\nimport {styles} from './styles';\n\nimport white_chevron from './assets/images/white.png';\nimport black_chevron from './assets/images/black.png';\n\nexport type InnerItem = {\n  /**Inner Item id */\n  id: string;\n  /**Default text for Inner Item */\n  name?: string;\n  /**Add your custom Inner Item */\n  customInnerItem?: JSX.Element;\n};\n\nexport interface Item {\n  /**Item id */\n  id: string;\n  /**Inner Items */\n  subCategory: InnerItem[];\n  /**Default text for Item */\n  categoryName?: string;\n  /**Add your custom Item */\n  customItem?: JSX.Element;\n}\n\ninterface InnerItemClickCallback {\n  innerItemIndex: number;\n  item: Item;\n  itemIndex: number;\n}\n\ninterface Props {\n  /** Data for the expandable listview */\n  data: Array<Item>;\n  /** Callback for item click */\n  onItemClick?: ({index}: {index: number}) => void;\n  /** Callback for inner item click */\n  onInnerItemClick?: ({\n    innerItemIndex,\n    item,\n    itemIndex,\n  }: InnerItemClickCallback) => void;\n  /** Add style to whole expandable listview */\n  ExpandableListViewStyles?: ViewStyle;\n  /** Add style to each inner item container */\n  innerItemContainerStyle?: ViewStyle;\n  /** Add style to each inner item label */\n  innerItemLabelStyle?: TextStyle;\n  /** Add style to each item container */\n  itemContainerStyle?: ViewStyle;\n  /** Add style to each item label */\n  itemLabelStyle?: TextStyle;\n  /** Add style to the item indicator */\n  itemImageIndicatorStyle?: ImageStyle;\n  /** Pass the path for your custom indicator */\n  customChevron?: string;\n  /** Color for default indicator */\n  chevronColor?: 'white' | 'black';\n  /** Render separator for items */\n  renderItemSeparator?: boolean;\n  /** Render separator for inner items */\n  renderInnerItemSeparator?: boolean;\n  /** Add style to the item separator */\n  itemSeparatorStyle?: ViewStyle;\n  /** Add style to the inner item separator */\n  innerItemSeparatorStyle?: ViewStyle;\n  /** Set Animation on/off, default on */\n  animated?: boolean;\n  /** Set your styles to default loader (only for animated={true}) */\n  defaultLoaderStyles?: ViewStyle;\n  /** Pass your custom loader, while your content is measured and rendered (only for animated={true}) */\n  customLoader?: JSX.Element;\n}\n\ninterface ExpandableListItem {\n  item: Item;\n  index: number;\n}\n\nconst initialState = {\n  opened: false,\n  height: [],\n  data: [],\n  isMounted: [],\n  lastSelectedIndex: -1,\n  selectedIndex: -1,\n  opacityValues: new Animated.Value(0),\n  animatedValues: [],\n  rotateValueHolder: [],\n};\n\nfunction reducer(\n  state: any,\n  action: {\n    type: string;\n    data?: Item[];\n    opened?: boolean;\n    height?: [];\n    isMounted?: [];\n    lastSelectedIndex?: number;\n    selectedIndex?: number;\n    opacityValues?: Animated.Value;\n    animatedValues?: Animated.Value[];\n    rotateValueHolder?: Animated.Value[];\n  },\n) {\n  switch (action.type) {\n    case 'set':\n      return {...state, ...action};\n    case 'reset':\n      return {\n        opened: false,\n        height: [],\n        data: [],\n        isMounted: [],\n        lastSelectedIndex: -1,\n        selectedIndex: -1,\n        opacityValues: new Animated.Value(0),\n        animatedValues: [],\n        rotateValueHolder: [],\n      };\n    default:\n      return {...state};\n  }\n}\n\nexport const ExpandableListView: React.FC<Props> = ({data,innerItemLabelStyle,renderItemSeparator,renderInnerItemSeparator,onInnerItemClick,onItemClick,defaultLoaderStyles,itemSeparatorStyle,itemLabelStyle,itemImageIndicatorStyle,itemContainerStyle,innerItemSeparatorStyle,innerItemContainerStyle,customLoader,customChevron,animated=true,chevronColor, ExpandableListViewStyles}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const CustomLoader = customLoader;\n  useEffect(() => {\n    if (state.selectedIndex >= 0) {\n      if (state.animatedValues[state.selectedIndex] !== undefined) {\n        if (state.selectedIndex !== state.lastSelectedIndex) {\n          if (\n            state.lastSelectedIndex >= 0 &&\n            state.lastSelectedIndex < state.data.length\n          ) {\n            Animated.parallel([\n              Animated.timing(state.animatedValues[state.lastSelectedIndex], {\n                useNativeDriver: false,\n                duration: 300,\n                easing: Easing.linear,\n                toValue: 0,\n              }),\n              Animated.timing(\n                state.rotateValueHolder[state.lastSelectedIndex],\n                {\n                  toValue: 0,\n                  duration: 300,\n                  easing: Easing.linear,\n                  useNativeDriver: true,\n                },\n              ),\n            ]).start();\n          }\n          Animated.parallel([\n            Animated.timing(state.animatedValues[state.selectedIndex], {\n              useNativeDriver: false,\n              duration: 300,\n              easing: Easing.linear,\n              toValue: state.height[state.selectedIndex],\n            }),\n            Animated.timing(state.rotateValueHolder[state.selectedIndex], {\n              toValue: 1,\n              duration: 300,\n              easing: Easing.linear,\n              useNativeDriver: true,\n            }),\n          ]).start();\n        } else {\n          Animated.parallel([\n            Animated.timing(state.animatedValues[state.selectedIndex], {\n              useNativeDriver: false,\n              duration: 300,\n              easing: Easing.linear,\n              toValue:\n                state.opened &&\n                state.height !== undefined &&\n                state.height[state.selectedIndex] !== undefined\n                  ? state.height[state.selectedIndex]\n                  : 0,\n            }),\n            Animated.timing(state.rotateValueHolder[state.selectedIndex], {\n              toValue: state.opened ? 1 : 0,\n              duration: 300,\n              easing: Easing.linear,\n              useNativeDriver: true,\n            }),\n          ]).start();\n        }\n        dispatch({type: 'set', lastSelectedIndex: state.selectedIndex});\n      }\n    } else {\n      if (\n        state.isMounted.length === state.data.length &&\n        state.data.length > 0\n      ) {\n        Animated.timing(state.opacityValues, {\n          toValue: 1,\n          duration: 300,\n          easing: Easing.linear,\n          useNativeDriver: true,\n        }).start();\n      }\n    }\n  }, [\n    state.data,\n    state.height,\n    state.opened,\n    state.isMounted,\n    state.opacityValues,\n    state.animatedValues,\n    state.rotateValueHolder,\n    state.selectedIndex,\n    state.lastSelectedIndex,\n  ]);\n\n  useEffect(() => {\n    async function reset() {\n      await dispatch({type: 'reset'});\n      await dispatch({type: 'set', data: data});\n    }\n    reset();\n  }, [data]);\n\n  function handleLayout(evt: LayoutChangeEvent, index: number) {\n    if (!state.isMounted[index] && evt.nativeEvent.layout.height !== 0) {\n      let h = state.height;\n      h[index] = evt.nativeEvent.layout.height;\n      let m = state.isMounted;\n      m[index] = true;\n      let newAnimatedValues: Array<Animated.Value> = [...state.animatedValues];\n      let newRotateValueHolder: Array<Animated.Value> = [\n        ...state.rotateValueHolder,\n      ];\n      newAnimatedValues.push(new Animated.Value(0));\n      newRotateValueHolder.push(new Animated.Value(0));\n\n      dispatch({\n        type: 'set',\n        animatedValues: newAnimatedValues,\n        rotateValueHolder: newRotateValueHolder,\n        height: h,\n        isMounted: m,\n      });\n    }\n  }\n\n  function updateLayout(updatedIndex: number) {\n    dispatch({\n      type: 'set',\n      opened: updatedIndex === state.selectedIndex ? !state.opened : true,\n      selectedIndex: updatedIndex,\n    });\n\n    if (onItemClick) {\n      return onItemClick({index: updatedIndex});\n    }\n    return;\n  }\n\n  const List = useMemo(() => Animated.FlatList, []);\n\n  function renderInnerItem(itemO: any, headerItem: Item, headerIndex: number) {\n    let {item}: {item: InnerItem} = itemO;\n    let {index}: {index: number} = itemO;\n\n    let CustomComponent = item.customInnerItem;\n\n    let container = {\n      ...styles.content,\n      ...innerItemContainerStyle,\n      height: undefined,\n    };\n    innerItemLabelStyle = {\n      ...styles.text,\n      ...innerItemLabelStyle,\n      height: undefined,\n    };\n\n    innerItemSeparatorStyle = {\n      ...styles.innerItemSeparator,\n      ...innerItemSeparatorStyle,\n    };\n\n    return (\n      <>\n        <TouchableOpacity\n          activeOpacity={0.6}\n          key={Math.random()}\n          style={container}\n          onPress={() =>\n            onInnerItemClick &&\n            onInnerItemClick({\n              innerItemIndex: index,\n              item: headerItem,\n              itemIndex: headerIndex,\n            })\n          }>\n          {CustomComponent !== undefined ? (\n            CustomComponent\n          ) : (\n            <Text style={innerItemLabelStyle}>{item.name}</Text>\n          )}\n        </TouchableOpacity>\n        {renderInnerItemSeparator !== undefined &&\n          renderInnerItemSeparator &&\n          index < headerItem.subCategory.length - 1 && (\n            <View style={innerItemSeparatorStyle} />\n          )}\n      </>\n    );\n  }\n\n  function renderItem({item, index}: ExpandableListItem) {\n\n    itemContainerStyle = {\n      ...styles.header,\n      ...itemContainerStyle,\n      height: undefined,\n    };\n    itemLabelStyle = {\n      ...styles.headerText,\n      ...itemLabelStyle,\n    };\n    itemImageIndicatorStyle = {\n      height: 15,\n      width: 15,\n      marginHorizontal: 5,\n      ...itemImageIndicatorStyle,\n    };\n\n    itemSeparatorStyle = {...styles.headerSeparator, ...itemSeparatorStyle};\n\n    let CustomComponent = item.customItem;\n    return (\n      <Animated.View\n        style={{\n          height: undefined,\n        }}>\n        <TouchableOpacity\n          activeOpacity={0.6}\n          onPress={() => updateLayout(index)}\n          style={itemContainerStyle}>\n          {CustomComponent !== undefined ? (\n            CustomComponent\n          ) : (\n            <>\n              <Animated.Image\n                source={\n                  customChevron !== undefined\n                    ? customChevron\n                    : chevronColor !== undefined &&\n                      chevronColor === 'white'\n                    ? white_chevron\n                    : black_chevron\n                }\n                resizeMethod=\"scale\"\n                resizeMode=\"contain\"\n                style={[\n                  itemImageIndicatorStyle,\n                  animated === undefined ||\n                  (animated !== undefined && animated)\n                    ? state.rotateValueHolder[index] !== undefined && {\n                        transform: [\n                          {\n                            rotate: state.rotateValueHolder[index].interpolate({\n                              inputRange: [0, 1],\n                              outputRange: ['0deg', '90deg'],\n                            }),\n                          },\n                        ],\n                      }\n                    : {\n                        transform: [\n                          {\n                            rotate:\n                              state.opened && index === state.selectedIndex\n                                ? '90deg'\n                                : '0deg',\n                          },\n                        ],\n                      },\n                ]}\n              />\n\n              <Text style={itemLabelStyle}>{item.categoryName}</Text>\n            </>\n          )}\n        </TouchableOpacity>\n\n        <Animated.View\n          style={[\n            animated === undefined ||\n            (animated !== undefined && animated)\n              ? // eslint-disable-next-line react-native/no-inline-styles\n                {\n                  height: !state.isMounted[index]\n                    ? undefined\n                    : state.animatedValues[index],\n                  overflow: 'hidden',\n                }\n              : // eslint-disable-next-line react-native/no-inline-styles\n                {\n                  display:\n                    state.opened && index === state.selectedIndex\n                      ? 'flex'\n                      : 'none',\n                  overflow: 'hidden',\n                },\n          ]}\n          onLayout={(evt: any) => handleLayout(evt, index)}>\n          <FlatList\n            style={{height: undefined}}\n            contentContainerStyle={{height: undefined}}\n            updateCellsBatchingPeriod={50}\n            initialNumToRender={50}\n            windowSize={50}\n            maxToRenderPerBatch={50}\n            keyExtractor={() => Math.random().toString()}\n            listKey={String(Math.random())}\n            data={item.subCategory}\n            renderItem={(innerItem: any) =>\n              renderInnerItem(innerItem, item, index)\n            }\n          />\n        </Animated.View>\n\n        {renderItemSeparator !== undefined &&\n          renderItemSeparator &&\n          (!state.opened || state.selectedIndex !== index) &&\n          index < state.data.length - 1 && <View style={itemSeparatorStyle} />}\n      </Animated.View>\n    );\n  }\n\n  return (\n    <>\n    {animated && data.length >0 && state.isMounted[data.length -1] === undefined && (CustomLoader !== undefined ? CustomLoader : <ActivityIndicator style={defaultLoaderStyles} color=\"#94bfda\" size=\"large\" />)}\n\n    <Animated.View\n      style={[\n        // eslint-disable-next-line react-native/no-inline-styles\n        {\n          opacity:\n            animated === undefined ||\n            (animated !== undefined && animated)\n              ? state.isMounted.length === state.data.length &&\n                data.length > 0\n                ? state.opacityValues\n                : 0\n              : 1,\n        },\n        {...ExpandableListViewStyles},\n        {height: animated && data.length >0 && state.isMounted[data.length -1] === undefined ? 0 : ExpandableListViewStyles?.height !== undefined ? ExpandableListViewStyles?.height : 'auto'},\n      ]}>\n\n\n      <List\n        updateCellsBatchingPeriod={50}\n        initialNumToRender={50}\n        windowSize={50}\n        maxToRenderPerBatch={50}\n        keyExtractor={(_: any, itemIndex: number) => itemIndex.toString()}\n        data={state.data}\n        renderItem={(item: ExpandableListItem) => renderItem(item)}\n      />\n    </Animated.View>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}