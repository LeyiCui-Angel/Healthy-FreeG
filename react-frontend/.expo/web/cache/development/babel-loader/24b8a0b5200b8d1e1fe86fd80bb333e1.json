{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\nimport Constants from 'expo-constants';\nimport { DATA } from \"../data/FGList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(DATA),\n      _useState2 = _slicedToArray(_useState, 2),\n      listData = _useState2[0],\n      setListData = _useState2[1];\n\n  var row = [];\n  var prevOpenedRow;\n\n  var _renderItem = function renderItem(_ref, onClick) {\n    var item = _ref.item,\n        index = _ref.index;\n\n    var closeRow = function closeRow(index) {\n      console.log('closerow');\n\n      if (prevOpenedRow && prevOpenedRow !== row[index]) {\n        prevOpenedRow.close();\n      }\n\n      prevOpenedRow = row[index];\n    };\n\n    var _renderRightActions = function renderRightActions(progress, dragX, onClick) {\n      return _jsx(View, {\n        style: {\n          margin: 0,\n          alignContent: 'center',\n          justifyContent: 'center',\n          width: 150\n        },\n        children: _jsx(Button, {\n          color: \"red\",\n          onPress: onClick,\n          title: \"THROW AWAY\"\n        })\n      });\n    };\n\n    var _renderLeftActions = function renderLeftActions(progress, dragX, onClick) {\n      return _jsx(View, {\n        style: {\n          margin: 0,\n          alignContent: 'center',\n          justifyContent: 'center',\n          width: 150\n        },\n        children: _jsx(Button, {\n          color: \"red\",\n          onPress: onClick,\n          title: \"CONSUME\"\n        })\n      });\n    };\n\n    return _jsx(Swipeable, {\n      renderRightActions: function renderRightActions(progress, dragX) {\n        return _renderRightActions(progress, dragX, onClick);\n      },\n      renderLeftActions: function renderLeftActions(progress, dragX) {\n        return _renderLeftActions(progress, dragX, onClick);\n      },\n      onSwipeableOpen: function onSwipeableOpen() {\n        return closeRow(index);\n      },\n      ref: function ref(_ref2) {\n        return row[index] = _ref2;\n      },\n      rightOpenValue: -200,\n      children: _jsx(View, {\n        style: {\n          margin: 4,\n          borderColor: 'grey',\n          borderWidth: 1,\n          padding: 9,\n          backgroundColor: 'white'\n        },\n        children: _jsx(Text, {\n          children: item.title\n        })\n      })\n    });\n  };\n\n  var deleteItem = function deleteItem(_ref3) {\n    var item = _ref3.item,\n        index = _ref3.index;\n    console.log(item, index);\n    var a = listData;\n    a.splice(index, 1);\n    console.log(a);\n    setListData(_toConsumableArray(a));\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(FlatList, {\n      data: listData,\n      renderItem: function renderItem(v) {\n        return _renderItem(v, function () {\n          console.log('Pressed', v);\n          deleteItem(v);\n          Alert.alert('Remember that you can give out free food to earn credits!');\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    }), _jsx(Button, {\n      title: \"Add food\",\n      color: \"#841584\",\n      onPress: function onPress() {\n        return Alert.alert('Receipt received! Food will be added :)');\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#ecf0f1',\n    padding: 8\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});\n\nfunction renderLeftActions(progress, dragX, onClick) {\n  throw new Error('Function not implemented.');\n}","map":{"version":3,"sources":["/Users/angelcui/HealthyFreeG/screens/TabOneScreen.tsx"],"names":["React","useState","Swipeable","Constants","DATA","App","listData","setListData","row","prevOpenedRow","renderItem","onClick","item","index","closeRow","console","log","close","renderRightActions","progress","dragX","margin","alignContent","justifyContent","width","renderLeftActions","ref","borderColor","borderWidth","padding","backgroundColor","title","deleteItem","a","splice","styles","container","v","Alert","alert","id","StyleSheet","create","flex","paddingTop","statusBarHeight","paragraph","fontSize","fontWeight","textAlign","Error"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\nimport { Text, View, StyleSheet, FlatList, Button, Alert } from 'react-native';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\n\nimport Constants from 'expo-constants';\n\nimport { DATA } from '../data/FGList';\n\nexport default function App() {\n  const [listData, setListData] = useState(DATA);\n  let row: Array<any> = [];\n  let prevOpenedRow;\n\n  /**\n   *\n   */\n  const renderItem = ({ item, index }, onClick) => {\n    //\n    const closeRow = (index) => {\n      console.log('closerow');\n      if (prevOpenedRow && prevOpenedRow !== row[index]) {\n        prevOpenedRow.close();\n      }\n      prevOpenedRow = row[index];\n    };\n\n    const renderRightActions = (progress, dragX, onClick) => {\n      return (\n        <View\n          style={{\n            margin: 0,\n            alignContent: 'center',\n            justifyContent: 'center',\n            width: 150,\n          }}>\n          <Button color=\"red\" onPress={onClick} title=\"THROW AWAY\"></Button>\n        </View>\n      );\n    };\n\n    const renderLeftActions = (progress, dragX, onClick) => {\n      return (\n        <View\n          style={{\n            margin: 0,\n            alignContent: 'center',\n            justifyContent: 'center',\n            width: 150,\n          }}>\n          <Button color=\"red\" onPress={onClick} title=\"CONSUME\"></Button>\n        </View>\n      );\n    };\n\n    return (\n      <Swipeable\n        renderRightActions={(progress, dragX) =>\n          renderRightActions(progress, dragX, onClick)\n        }\n        renderLeftActions={(progress, dragX) =>\n          renderLeftActions(progress, dragX, onClick)\n        }\n        onSwipeableOpen={() => closeRow(index)}\n        ref={(ref) => (row[index] = ref)}\n        rightOpenValue={-200}>\n        <View\n          style={{\n            margin: 4,\n            borderColor: 'grey',\n            borderWidth: 1,\n            padding: 9,\n            backgroundColor: 'white',\n          }}>\n          <Text>{item.title}</Text>\n        </View>\n      </Swipeable>\n    );\n  };\n\n  const deleteItem = ({ item, index }) => {\n    console.log(item, index);\n    let a = listData;\n    a.splice(index, 1);\n    console.log(a);\n    setListData([...a]);\n  };\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={listData}\n        renderItem={(v) =>\n          renderItem(v, () => {\n            console.log('Pressed', v);\n            deleteItem(v);\n            Alert.alert('Remember that you can give out free food to earn credits!')\n          })\n        }\n        keyExtractor={(item) => item.id}></FlatList>\n      <Button\n        title=\"Add food\"\n        color=\"#841584\"\n        onPress={() => Alert.alert('Receipt received! Food will be added :)')\n          // adding stuff\n        }\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#ecf0f1',\n    padding: 8,\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n});\nfunction renderLeftActions(progress: Animated.AnimatedInterpolation, dragX: Animated.AnimatedInterpolation, onClick: any): React.ReactNode {\n  throw new Error('Function not implemented.');\n}\n\n"]},"metadata":{},"sourceType":"module"}