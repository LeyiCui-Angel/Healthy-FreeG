{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Text, View } from \"../components/Themed\";\nimport { Data } from \"../data/FGList\";\nimport { StatusBar } from 'expo-status-bar';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get('screen'),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar Item = function Item(_ref) {\n  var title = _ref.title;\n  return _jsx(View, {\n    style: styles.item,\n    children: _jsx(Text, {\n      style: styles.title,\n      children: title\n    })\n  });\n};\n\nvar TabOneScreen = function TabOneScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(SectionList, {\n      sections: Data,\n      keyExtractor: function keyExtractor(item, index) {\n        return item + index;\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsx(Item, {\n          title: item\n        });\n      },\n      renderSectionHeader: function renderSectionHeader(_ref4) {\n        var title = _ref4.section.title;\n        return _jsx(Text, {\n          style: styles.header,\n          children: title\n        });\n      }\n    }), _jsx(Button, {\n      title: \"Add food\",\n      color: \"#f194ff\",\n      onPress: function onPress() {\n        return Alert.alert('Recipe scanned! Food added.');\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: StatusBar.currentHeight,\n    marginHorizontal: 16\n  },\n  item: {\n    backgroundColor: \"#b5c4b1\",\n    padding: 20,\n    marginVertical: 3\n  },\n  header: {\n    fontSize: 25,\n    backgroundColor: \"#bfbfbf\"\n  },\n  title: {\n    fontSize: 12\n  }\n});\nexport default TabOneScreen;","map":{"version":3,"sources":["/Users/angelcui/HealthyFreeG/screens/TabOneScreen.tsx"],"names":["React","Text","View","Data","StatusBar","Dimensions","get","width","height","Item","title","styles","item","TabOneScreen","navigation","container","index","section","header","Alert","alert","StyleSheet","create","flex","justifyContent","paddingTop","currentHeight","marginHorizontal","backgroundColor","padding","marginVertical","fontSize"],"mappings":"AAAA,OAAOA,KAAP,MAA8B,OAA9B;;;;;;;AAGA,SAASC,IAAT,EAAeC,IAAf;AAGA,SAASC,IAAT;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;;AAGA,sBAAyBC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAzB;AAAA,IAAQC,KAAR,mBAAQA,KAAR;AAAA,IAAeC,MAAf,mBAAeA,MAAf;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SACX,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA,cACE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACD,KAApB;AAAA,gBAA4BA;AAA5B;AADF,IADW;AAAA,CAAb;;AAMA,IAAMG,YAAY,GAAG,SAAfA,YAAe;AAAA,MAAGC,UAAH,SAAGA,UAAH;AAAA,SACnB,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEH,MAAM,CAACI,SAA5B;AAAA,eACE,KAAC,WAAD;AACE,MAAA,QAAQ,EAAEZ,IADZ;AAEE,MAAA,YAAY,EAAE,sBAACS,IAAD,EAAOI,KAAP;AAAA,eAAiBJ,IAAI,GAAGI,KAAxB;AAAA,OAFhB;AAGE,MAAA,UAAU,EAAE;AAAA,YAAGJ,IAAH,SAAGA,IAAH;AAAA,eAAc,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEA;AAAb,UAAd;AAAA,OAHd;AAIE,MAAA,mBAAmB,EAAE;AAAA,YAAcF,KAAd,SAAGO,OAAH,CAAcP,KAAd;AAAA,eACnB,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEC,MAAM,CAACO,MAApB;AAAA,oBAA6BR;AAA7B,UADmB;AAAA;AAJvB,MADF,EASE,KAAC,MAAD;AACI,MAAA,KAAK,EAAC,UADV;AAEI,MAAA,KAAK,EAAC,SAFV;AAGI,MAAA,OAAO,EAAE;AAAA,eAAMS,KAAK,CAACC,KAAN,CAAY,6BAAZ,CAAN;AAAA;AAHb,MATF;AAAA,IADmB;AAAA,CAArB;;AAmBA,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAErB,SAAS,CAACsB,aAHb;AAITC,IAAAA,gBAAgB,EAAE;AAJT,GADoB;AAO/Bf,EAAAA,IAAI,EAAE;AACJgB,IAAAA,eAAe,EAAE,SADb;AAEJC,IAAAA,OAAO,EAAE,EAFL;AAGJC,IAAAA,cAAc,EAAE;AAHZ,GAPyB;AAY/BZ,EAAAA,MAAM,EAAE;AACNa,IAAAA,QAAQ,EAAE,EADJ;AAENH,IAAAA,eAAe,EAAE;AAFX,GAZuB;AAgB/BlB,EAAAA,KAAK,EAAE;AACLqB,IAAAA,QAAQ,EAAE;AADL;AAhBwB,CAAlB,CAAf;AAqBA,eAAelB,YAAf","sourcesContent":["import React, {useState} from 'react';\nimport { StyleSheet, SafeAreaView, SectionList, Button, Alert, Dimensions, Animated, } from \"react-native\";\n\nimport { Text, View } from '../components/Themed';\nimport { RootTabScreenProps } from '../types';\n\nimport { Data } from '../data/FGList'\nimport { StatusBar } from 'expo-status-bar';\nimport moment from 'moment'\nimport Swipeable from 'react-native-gesture-handler/Swipeable'\nconst  {width, height} = Dimensions.get('screen')\nimport {FontAwesome} from '@expo/vector-icons'\n\nconst Item = ({ title }) => (\n  <View style={styles.item}>\n    <Text style={styles.title}>{title}</Text>\n  </View>\n);\n\nconst TabOneScreen = ({ navigation }: RootTabScreenProps<'TabOne'>) => (\n  <SafeAreaView style={styles.container}>\n    <SectionList\n      sections={Data}\n      keyExtractor={(item, index) => item + index}\n      renderItem={({ item }) => <Item title={item} />}\n      renderSectionHeader={({ section: { title } }) => (\n        <Text style={styles.header}>{title}</Text>\n      )}\n    />\n    <Button\n        title=\"Add food\"\n        color=\"#f194ff\"\n        onPress={() => Alert.alert('Recipe scanned! Food added.')}\n    />\n  </SafeAreaView>\n);\n\n// Style\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingTop: StatusBar.currentHeight,\n    marginHorizontal: 16\n  },\n  item: {\n    backgroundColor: \"#b5c4b1\",\n    padding: 20,\n    marginVertical: 3\n  },\n  header: {\n    fontSize: 25,\n    backgroundColor: \"#bfbfbf\"\n  },\n  title: {\n    fontSize: 12\n  }\n});\n\nexport default TabOneScreen;"]},"metadata":{},"sourceType":"module"}